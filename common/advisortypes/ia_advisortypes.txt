# If you add advisortypes, and use those tags, do not change them without changing everywhere they are used.
#
# Additional arguments: allow_only_male/allow_only_female
# Contains skill_scaled_modifier for which the effects get multiplied by the advisor's skill level
# Uses all 'modifiers' possible that are exported as a Modifier.

# Note that ai_will_do calculates a priority.
# An advisor may be chosen over another if its random priority exceeds it. RandomPriority(advisor) := rand[1, 2[ * Priority(advisor).


######################################################
# Administrative Advisors
######################################################

######################################################
alchemist_advisor = {
	monarch_power = DIP
	skill_scaled_modifier = {
		trigger = {
			owner = {
				has_country_flag = ven_splendor_flag
			}
		}
		modifier = {
			monthly_splendor = 1
		}
	}
	skill_scaled_modifier = {
		trigger = {
			owner = {
				has_government_mechanic = russian_modernization_mechanic
				NOT = { culture_group = PREV }
			}
		}
		modifier = {
			monthly_russian_modernization = 0.02
		}
	}
	skill_scaled_modifier = {
		trigger = { owner = {  has_country_modifier = mam_adm_advisors_generate_idea_cost_modifier  } }
		modifier = { idea_cost = -0.01 }
	}
	
	# Bonus
	alchemists_loyalty_modifier = 0.05
	skill_scaled_modifier = {
		trigger = { owner = {  has_government_attribute = reform_progress_from_advisors  } }
		modifier = { reform_progress_growth = 0.03 }
	}
	skill_scaled_modifier = {
		trigger = { 
			owner = { 
				has_country_flag = 5_gov_cap_bonus_flag 
			}
		}
		modifier = {
			governing_capacity_modifier = 0.03
		}
	}	

	skill_scaled_modifier = {
		trigger = { 
			owner = { 
				has_country_flag = fin_fine_finances_flag 
			}
		}
		modifier = {
			global_tax_modifier = 0.05
		}
	}	
	skill_scaled_modifier = {
		trigger = {
			owner = { 
				has_government_attribute = republican_tradition_from_advisors 
			}
		}
		modifier = {
			republican_tradition = 0.02 
		}
	}
	skill_scaled_modifier = {
		trigger = { 
			owner = {  
				is_emperor_of_china = yes 
			}
		}
		modifier = { meritocracy = 0.25 }
	}
	skill_scaled_modifier = {
		trigger = { 
			owner = { 
				has_country_flag = mng_dev_per_adm_advisor_level_flag 
			}
		}
		modifier = {
			development_cost = -0.02
		}
	}
	skill_scaled_modifier = {
		trigger = {
			owner = { has_country_modifier = eng_foreign_religious_control }
		}
		modifier = { tolerance_heretic = 1 }
	}
	skill_scaled_modifier = {
		trigger = { always = yes }
		modifier = {
			yearly_innovativeness = 0.1
		}
	}

	skill_scaled_modifier = {
		trigger = {
			owner = {
				has_government_mechanic = persian_influence_mechanic
			}
		}
		modifier = {
			monthly_persian_influence = 0.1
		}
	}

	chance = {
		factor = 1
		modifier = {
			factor = 0
			NOT = { religion = hellenic_pagan_reformed }
			NOT = { religion = confucianism }
			NOT = { culture_group = east_asian }
		}
		modifier = {
			factor = 0.2
			owner = { NOT = { has_estate = estate_alchemists } }
		}
		modifier = {
			factor = 1.5
			owner = { 
				estate_loyalty = {
					estate = estate_alchemists
					loyalty = 60
				}
			}
		}
		modifier = {
			factor = 1.5
			owner = { 
				estate_influence = {
					estate = estate_alchemists
					influence = 50
				}
			}
		}
	}
	
	ai_will_do = {
		factor = 1.5
	}
}